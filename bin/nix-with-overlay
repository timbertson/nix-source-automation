#!/usr/bin/env python3
import os, sys, subprocess
here = os.path.dirname(__file__)
class Object(object): pass
def usage(status=1):
	print("Usage: TODO...", file=sys.stderr)
	sys.exit(status)

def parse():
	args = sys.argv[1:]
	def extract_all(opt, has_arg=True):
		acc = [] if has_arg else None
		while True:
			try:
				idx = args.index(opt)
			except ValueError:
				return acc
			args.pop(idx)
			if not has_arg:
				return True
			else:
				arg = args.pop(idx)
				acc.append(arg)

	if extract_all('--help', has_arg=False):
		usage(0)

	opts = Object()
	opts.add = extract_all('--add')
	return (opts, args)

opts, args = parse()

def add_to_path(name, entry):
	path = os.environ.get(name)
	if path is None:
		path = []
	else:
		path = path.split(' ')
	path.append(entry)
	os.environ[name] = ':'.join(path)

add_to_path('NIX_PATH',
	"nixpkgs-overlays=%s" % (os.path.join(os.path.dirname(here),'nix', 'withOverlay'),)
)
for p in opts.add:
	add_to_path('NIX_OVERLAY_PATH', os.path.abspath(p))

os.execvp(args[0], args)
