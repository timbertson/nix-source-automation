#!/usr/bin/env python3
# Apply `pkgs.callPackage` when imporing a .nix file,
# optionally merging in some additional attrsets (e.g. pythonPackages)

import os, sys, subprocess
here = os.path.dirname(__file__)
class Object(object): pass
def usage(status=1):
	print("Usage: TODO...", file=sys.stderr)
	sys.exit(status)

def parse():
	args = sys.argv[1:]
	def extract_all(opt, has_arg=True):
		acc = [] if has_arg else None
		while True:
			try:
				idx = args.index(opt)
			except ValueError:
				return acc
			args.pop(idx)
			if not has_arg:
				return True
			else:
				arg = args.pop(idx)
				acc.append(arg)

	if extract_all('--help', has_arg=False):
		usage(0)

	opts = Object()
	opts.merge = extract_all('--merge')
	return (opts, args)

opts, args = parse()

exprs = opts.merge

path = args.pop()
args.extend(['--arg', 'merge', "pkgs: with pkgs; [%s]" % " ".join(["(%s)" % expr for expr in exprs])])
args.extend(['--argstr', 'path', os.path.abspath(path), os.path.join(os.path.dirname(here), 'nix', 'callPackage.nix')])

print(repr(args))
os.execvp(args[0], args)
